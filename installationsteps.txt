Step 1
Download helm
Go to
https://github.com/helm/helm/releases
download the file 
Windows amd64 (hyperlink)

#set env variable

#Check helm version

helm version

Step2
#prometheus installation
#check helm repository list

helm repo list

#Add repository
helm repo add bitnami https://charts.bitnami.com/bitnami

#prometheus installation

Step 1: Add the Prometheus Helm Chart Repository

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

Update your Helm repository:
helm repo update
Step 2:
kubectl create namespace prometheus

Step3:

helm install prometheus prometheus-community/prometheus -n prometheus

Step 4:

helm list -n prometheus
Step5:

kubectl get pods -n prometheus

#if node exporter pod fails, run the patch
kubectl patch -n prometheus ds prometheus-prometheus-node-exporter --type "json" -p "[{"op": "remove", "path" : "/spec/template/spec/containers/0/volumeMounts/2/mountPropagation"}]"

Step6
#Run the prometheus server, push gateway , node exporter and alert manager in localhost
#follow the steps below
#open bash script in administrator mode
#go to the folder where we have port-forward.sh
chmod 777 ./port-forward.sh
./port-forward.sh

Step 7
Go to browser
#prometheus server
http://localhost:9090
#push gateway 
http://localhost:9091
#node exporter
http://localhost:9100
#alert manager
http://localhost:9093

#grafana installation
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
kubectl create namespace grafana
helm install my-grafana grafana/grafana -n grafana
kubectl get pods,svc -n grafana
#expose grafana as service in localhost
kubectl expose deployment --port 3000 my-grafana -n grafana --type=LoadBalancer --name=grafanaservice
#use bash script
kubectl get secret --namespace grafana my-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
#open browser to access grafana
http://localhost:3000
#telegraf installation
helm repo add influxdata https://helm.influxdata.com
helm repo update
#install influxdb
kubectl create ns influxdbns
helm install influxdb influxdata/influxdb2 --set adminuser.enabled=true --set adminuser.user=admin --set adminuser.password=admin123 --set adminuser.org=rps --set adminuser.bucket=training --set adminuser.token=mysecret -n influxdbns
#expose to port no 8086
#get the password using bashscript
kubectl get secret influxdb-influxdb2-auth -o "jsonpath={.data['admin-password']}" --namespace influxdbns | base64 --decode
#access db from 
http://localhost:8086
kubectl port-forward -n influxdbns svc/influxdb-influxdb2 8086:80
kubectl get secret influxdb-influxdb2-auth -o "jsonpath={.data['admin-password']}" --namespace influxdbns | base64 --decode
kubectl create ns telegraf
helm install telegraf influxdata/telegraf -n telegraf
#create the new folder
helm show values influxdata/telegraf > values.yaml
#add output as Prometheus client
helm upgrade telegraf influxdata/telegraf  -f values.yaml
kubectl port-forward svc/telegraf 9273:9273
http://localhost:9273/metrics





